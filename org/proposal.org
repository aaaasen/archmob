
* [piPhone] (name subject to change)-software branch:
** A suite of utilities and customizations for making Arch Linux into a usable mobile platform (e.g. condensed interface, phone, SMS, camera, custom keybindings) especially for the Raspberry Pi.
* Description
** This is the software branch of [piPhone]; which will be a mobile device built off of the Raspberry Pi (a $25-35 customizable ARM Linux board the size of a credit card (think very capable Arduino)). My goal is to create a very quick mobile interface by extending and customizing xmonad as well as a suite of essential mobile applications. The latter will include simple wrappers for pygooglevoice for basic phone and SMS, data retrieval scripts for quickly accessing information and lightweight applications for utilizing optional hardware like cameras and sensors. The project will consist of installing, configuring and optimizing Arch Linux to best utilize the RPi's 700 MHz processor, 256 MB of RAM and minimal graphical capabilities. It will also necessitate some light scripting for making system utilities in python, bash and possibly C for non-trivial appications or daemons. Note: the goals of this project are still very much subject to change based on hardware limitations etc.
* Features
** fully configured Arch Linux installation (except for RPi-exclusive hardware)
** phone capabilities through Google Voice and pygooglevoice (python bindings for Google Voice)
** SMS capabilites through the same
** simple wrapper for pygooglevoice for ease of use from bash
** ncurses interface extending the latter
** specialized xmonad configuration for small screens
** alternate mini-keyboard friendly keybindings
*** left thumb for mod keys (ctrl, shift, alt, etc.)
*** right thumb for complementary keys
*** can be flipped if preferred (especially for left handed individuals)
** automated configuration scripts to provide a usable yet customizable and open system
* Target User/Customer
** Myself or anyone else interested in having a truly open, modular and customizable mobile device.
* Technologies
** Languages: mainly python (pygooglevoice, ncurses) with some bash (light scripting), haskell (xmonad), C (often used non-trivial utilities)
** Tools: Emacs, Arch Linux, Virtual Box for simulating small screens, personal computer as development machine
* Time Estimate
** 3 student weeks with extensive work outside of class
